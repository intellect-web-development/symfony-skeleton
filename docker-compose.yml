version: "3.7"

networks:
  internal-network:

services:
  nginx:
    build:
      context: docker
      dockerfile: development/nginx/Dockerfile
    volumes:
      - ./:/app
    ports:
      - "8080:80"
    networks:
      - internal-network

  app-php-fpm:
    container_name: app-php-fpm
    build:
      context: docker
      dockerfile: development/php-fpm/Dockerfile
    volumes:
      - ./:/app
    networks:
      - internal-network

  app-php-cli:
    container_name: app-php-cli
    build:
      context: docker
      dockerfile: development/php-cli/Dockerfile
    volumes:
      - ./:/app
    networks:
      - internal-network

  app-postgres-db:
    container_name: app-postgres-db
    volumes:
      - db:/var/lib/postgresql/data
    image: postgres:13-alpine
    ports:
      - "54321:5432"
    restart: always
    environment:
      POSTGRES_DB: application-db
      POSTGRES_USER: default
      POSTGRES_PASSWORD: secret
    networks:
      - internal-network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  db:

###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
